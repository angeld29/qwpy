/*
Copyright (C) 1996-1997 Id Software, Inc.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

*/
#ifndef _PROGS_H_
#define _PROGS_H_

#include "progdefs.h"			// generated by program cdefs


#define	MAX_ENT_LEAFS	16

typedef struct edict_s
{
	qboolean	free;
	link_t		area;				// linked to a division node or leaf
	
	int			num_leafs;
	short		leafnums[MAX_ENT_LEAFS];

	entity_state_t	baseline;
	
	float		freetime;			// sv.time when the object was freed
	entvars_t	v;					// C exported fields from progs
    struct qwp_entity_s *p_entity;

} edict_t;

#define	EDICT_FROM_AREA(l) STRUCT_FROM_LINK(l,edict_t,area)

//============================================================================

extern	globalvars_t	*pr_global_struct;
extern  globalfuncs_t   *pr_func_struct;


//============================================================================

void PR_Init (void);

void PR_ExecuteProgram (PyObject * fnum);

edict_t *ED_Alloc(void);
void ED_ClearEdict(edict_t *e);
void ED_Free(edict_t *ed);

edict_t *EDICT_NUM(int n);
int NUM_FOR_EDICT(edict_t *e);

#define	NEXT_EDICT(e) (e+1)

#define EDICT_TO_PROG(e) (e - sv.edicts)
#define PROG_TO_EDICT(e) (sv.edicts + e)

//============================================================================

extern PyObject * SpectatorConnect;
extern PyObject * SpectatorThink;
extern PyObject * SpectatorDisconnect;

#endif