###
### Generated by QuakeC -> Python translator
### Id: qc2python.py,v 1.5 2001/02/05 21:15:44 barryp Exp 
###
from qwpython.qwsv import engine, Vector
from qwpython.qcsupport import qc

import defs
import weapons
import client
import random
import misc
import subs
import items
import math

frame = {
        'axrun1': 0,
        'axrun2': 1,
        'axrun3': 2,
        'axrun4': 3,
        'axrun5': 4,
        'axrun6': 5,
        'rockrun1': 6,
        'rockrun2': 7,
        'rockrun3': 8,
        'rockrun4': 9,
        'rockrun5': 10,
        'rockrun6': 11,
        'stand1': 12,
        'stand2': 13,
        'stand3': 14,
        'stand4': 15,
        'stand5': 16,
        'axstnd1': 17,
        'axstnd2': 18,
        'axstnd3': 19,
        'axstnd4': 20,
        'axstnd5': 21,
        'axstnd6': 22,
        'axstnd7': 23,
        'axstnd8': 24,
        'axstnd9': 25,
        'axstnd10': 26,
        'axstnd11': 27,
        'axstnd12': 28,
        'axpain1': 29,
        'axpain2': 30,
        'axpain3': 31,
        'axpain4': 32,
        'axpain5': 33,
        'axpain6': 34,
        'pain1': 35,
        'pain2': 36,
        'pain3': 37,
        'pain4': 38,
        'pain5': 39,
        'pain6': 40,
        'axdeth1': 41,
        'axdeth2': 42,
        'axdeth3': 43,
        'axdeth4': 44,
        'axdeth5': 45,
        'axdeth6': 46,
        'axdeth7': 47,
        'axdeth8': 48,
        'axdeth9': 49,
        'deatha1': 50,
        'deatha2': 51,
        'deatha3': 52,
        'deatha4': 53,
        'deatha5': 54,
        'deatha6': 55,
        'deatha7': 56,
        'deatha8': 57,
        'deatha9': 58,
        'deatha10': 59,
        'deatha11': 60,
        'deathb1': 61,
        'deathb2': 62,
        'deathb3': 63,
        'deathb4': 64,
        'deathb5': 65,
        'deathb6': 66,
        'deathb7': 67,
        'deathb8': 68,
        'deathb9': 69,
        'deathc1': 70,
        'deathc2': 71,
        'deathc3': 72,
        'deathc4': 73,
        'deathc5': 74,
        'deathc6': 75,
        'deathc7': 76,
        'deathc8': 77,
        'deathc9': 78,
        'deathc10': 79,
        'deathc11': 80,
        'deathc12': 81,
        'deathc13': 82,
        'deathc14': 83,
        'deathc15': 84,
        'deathd1': 85,
        'deathd2': 86,
        'deathd3': 87,
        'deathd4': 88,
        'deathd5': 89,
        'deathd6': 90,
        'deathd7': 91,
        'deathd8': 92,
        'deathd9': 93,
        'deathe1': 94,
        'deathe2': 95,
        'deathe3': 96,
        'deathe4': 97,
        'deathe5': 98,
        'deathe6': 99,
        'deathe7': 100,
        'deathe8': 101,
        'deathe9': 102,
        'nailatt1': 103,
        'nailatt2': 104,
        'light1': 105,
        'light2': 106,
        'rockatt1': 107,
        'rockatt2': 108,
        'rockatt3': 109,
        'rockatt4': 110,
        'rockatt5': 111,
        'rockatt6': 112,
        'shotatt1': 113,
        'shotatt2': 114,
        'shotatt3': 115,
        'shotatt4': 116,
        'shotatt5': 117,
        'shotatt6': 118,
        'axatt1': 119,
        'axatt2': 120,
        'axatt3': 121,
        'axatt4': 122,
        'axatt5': 123,
        'axatt6': 124,
        'axattb1': 125,
        'axattb2': 126,
        'axattb3': 127,
        'axattb4': 128,
        'axattb5': 129,
        'axattb6': 130,
        'axattc1': 131,
        'axattc2': 132,
        'axattc3': 133,
        'axattc4': 134,
        'axattc5': 135,
        'axattc6': 136,
        'axattd1': 137,
        'axattd2': 138,
        'axattd3': 139,
        'axattd4': 140,
        'axattd5': 141,
        'axattd6': 142
        }
# 
# ==============================================================================
# 
# PLAYER
# 
# ==============================================================================
# 
# 
#  running
# 
# 
#  standing
# 
# 
#  pain
# 
# 
#  death
# 
# 
#  attacks
# 
# 
# ==============================================================================
# PLAYER
# ==============================================================================
# 

def player_stand1(*qwp_extra):
    qc.self.frame = frame['axstnd1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_stand1
    qc.self.weaponframe = 0
    if qc.self.velocity.x or qc.self.velocity.y:
        qc.self.walkframe = 0
        player_run()
        return 
        
    if qc.self.weapon == defs.IT_AXE:
        if qc.self.walkframe >= 12:
            qc.self.walkframe = 0
        qc.self.frame = frame['axstnd1'] + qc.self.walkframe
        
    else:
        if qc.self.walkframe >= 5:
            qc.self.walkframe = 0
        qc.self.frame = frame['stand1'] + qc.self.walkframe
        
    qc.self.walkframe += 1
    

def player_run(*qwp_extra):
    qc.self.frame = frame['rockrun1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run
    qc.self.weaponframe = 0
    if not qc.self.velocity.x and not qc.self.velocity.y:
        qc.self.walkframe = 0
        player_stand1()
        return 
        
    if qc.self.weapon == defs.IT_AXE:
        if qc.self.walkframe == 6:
            qc.self.walkframe = 0
        qc.self.frame = frame['axrun1'] + qc.self.walkframe
        
    else:
        if qc.self.walkframe == 6:
            qc.self.walkframe = 0
        qc.self.frame += qc.self.walkframe
        
    qc.self.walkframe += 1
    

def muzzleflash(*qwp_extra):
    qc.WriteByte(defs.MSG_MULTICAST, defs.SVC_MUZZLEFLASH)
    qc.WriteEntity(defs.MSG_MULTICAST, qc.self)
    engine.multicast(qc.self.origin, defs.MULTICAST_PVS)
    

def player_shot1(*qwp_extra):
    qc.self.frame = frame['shotatt1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_shot2
    qc.self.weaponframe = 1
    muzzleflash()

def player_shot2(*qwp_extra):
    qc.self.frame = frame['shotatt2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_shot3
    qc.self.weaponframe = 2

def player_shot3(*qwp_extra):
    qc.self.frame = frame['shotatt3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_shot4
    qc.self.weaponframe = 3

def player_shot4(*qwp_extra):
    qc.self.frame = frame['shotatt4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_shot5
    qc.self.weaponframe = 4

def player_shot5(*qwp_extra):
    qc.self.frame = frame['shotatt5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_shot6
    qc.self.weaponframe = 5

def player_shot6(*qwp_extra):
    qc.self.frame = frame['shotatt6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run
    qc.self.weaponframe = 6

def player_axe1(*qwp_extra):
    qc.self.frame = frame['axatt1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axe2
    qc.self.weaponframe = 1

def player_axe2(*qwp_extra):
    qc.self.frame = frame['axatt2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axe3
    qc.self.weaponframe = 2

def player_axe3(*qwp_extra):
    qc.self.frame = frame['axatt3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axe4
    qc.self.weaponframe = 3
    weapons.W_FireAxe()

def player_axe4(*qwp_extra):
    qc.self.frame = frame['axatt4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run
    qc.self.weaponframe = 4

def player_axeb1(*qwp_extra):
    qc.self.frame = frame['axattb1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axeb2
    qc.self.weaponframe = 5

def player_axeb2(*qwp_extra):
    qc.self.frame = frame['axattb2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axeb3
    qc.self.weaponframe = 6

def player_axeb3(*qwp_extra):
    qc.self.frame = frame['axattb3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axeb4
    qc.self.weaponframe = 7
    weapons.W_FireAxe()

def player_axeb4(*qwp_extra):
    qc.self.frame = frame['axattb4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run
    qc.self.weaponframe = 8

def player_axec1(*qwp_extra):
    qc.self.frame = frame['axattc1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axec2
    qc.self.weaponframe = 1

def player_axec2(*qwp_extra):
    qc.self.frame = frame['axattc2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axec3
    qc.self.weaponframe = 2

def player_axec3(*qwp_extra):
    qc.self.frame = frame['axattc3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axec4
    qc.self.weaponframe = 3
    weapons.W_FireAxe()

def player_axec4(*qwp_extra):
    qc.self.frame = frame['axattc4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run
    qc.self.weaponframe = 4

def player_axed1(*qwp_extra):
    qc.self.frame = frame['axattd1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axed2
    qc.self.weaponframe = 5

def player_axed2(*qwp_extra):
    qc.self.frame = frame['axattd2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axed3
    qc.self.weaponframe = 6

def player_axed3(*qwp_extra):
    qc.self.frame = frame['axattd3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axed4
    qc.self.weaponframe = 7
    weapons.W_FireAxe()

def player_axed4(*qwp_extra):
    qc.self.frame = frame['axattd4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run
    qc.self.weaponframe = 8
# ============================================================================

def player_nail1(*qwp_extra):
    qc.self.frame = frame['nailatt1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_nail2
    muzzleflash()
    if not qc.self.button0 or client.intermission_running or qc.self.impulse:
        player_run()
        return 
    qc.self.weaponframe += 1
    if qc.self.weaponframe == 9:
        qc.self.weaponframe = 1
    weapons.SuperDamageSound()
    weapons.W_FireSpikes(4)
    qc.self.attack_finished = qc.time + 0.2
    

def player_nail2(*qwp_extra):
    qc.self.frame = frame['nailatt2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_nail1
    muzzleflash()
    if not qc.self.button0 or client.intermission_running or qc.self.impulse:
        player_run()
        return 
    qc.self.weaponframe += 1
    if qc.self.weaponframe == 9:
        qc.self.weaponframe = 1
    weapons.SuperDamageSound()
    weapons.W_FireSpikes(-4)
    qc.self.attack_finished = qc.time + 0.2
    
# ============================================================================

def player_light1(*qwp_extra):
    qc.self.frame = frame['light1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_light2
    muzzleflash()
    if not qc.self.button0 or client.intermission_running:
        player_run()
        return 
    qc.self.weaponframe += 1
    if qc.self.weaponframe == 5:
        qc.self.weaponframe = 1
    weapons.SuperDamageSound()
    weapons.W_FireLightning()
    qc.self.attack_finished = qc.time + 0.2
    

def player_light2(*qwp_extra):
    qc.self.frame = frame['light2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_light1
    muzzleflash()
    if not qc.self.button0 or client.intermission_running:
        player_run()
        return 
    qc.self.weaponframe += 1
    if qc.self.weaponframe == 5:
        qc.self.weaponframe = 1
    weapons.SuperDamageSound()
    weapons.W_FireLightning()
    qc.self.attack_finished = qc.time + 0.2
    
# ============================================================================

def player_rocket1(*qwp_extra):
    qc.self.frame = frame['rockatt1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_rocket2
    qc.self.weaponframe = 1
    muzzleflash()

def player_rocket2(*qwp_extra):
    qc.self.frame = frame['rockatt2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_rocket3
    qc.self.weaponframe = 2

def player_rocket3(*qwp_extra):
    qc.self.frame = frame['rockatt3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_rocket4
    qc.self.weaponframe = 3

def player_rocket4(*qwp_extra):
    qc.self.frame = frame['rockatt4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_rocket5
    qc.self.weaponframe = 4

def player_rocket5(*qwp_extra):
    qc.self.frame = frame['rockatt5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_rocket6
    qc.self.weaponframe = 5

def player_rocket6(*qwp_extra):
    qc.self.frame = frame['rockatt6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run
    qc.self.weaponframe = 6

def PainSound(*qwp_extra):
    rs = 0
    if qc.self.health < 0:
        return 
    if defs.damage_attacker.classname == 'teledeath':
        qc.self.sound(defs.CHAN_VOICE, 'player/teledth1.wav', 1, defs.ATTN_NONE)
        return 
        
    #  water pain sounds
    if qc.self.watertype == defs.CONTENT_WATER and qc.self.waterlevel == 3:
        DeathBubbles(1)
        if random.random() > 0.5:
            qc.self.sound(defs.CHAN_VOICE, 'player/drown1.wav', 1, defs.ATTN_NORM)
        else:
            qc.self.sound(defs.CHAN_VOICE, 'player/drown2.wav', 1, defs.ATTN_NORM)
        return 
        
    #  slime pain sounds
    if qc.self.watertype == defs.CONTENT_SLIME:
        #  FIX ME       put in some steam here
        if random.random() > 0.5:
            qc.self.sound(defs.CHAN_VOICE, 'player/lburn1.wav', 1, defs.ATTN_NORM)
        else:
            qc.self.sound(defs.CHAN_VOICE, 'player/lburn2.wav', 1, defs.ATTN_NORM)
        return 
        
    if qc.self.watertype == defs.CONTENT_LAVA:
        if random.random() > 0.5:
            qc.self.sound(defs.CHAN_VOICE, 'player/lburn1.wav', 1, defs.ATTN_NORM)
        else:
            qc.self.sound(defs.CHAN_VOICE, 'player/lburn2.wav', 1, defs.ATTN_NORM)
        return 
        
    if qc.self.pain_finished > qc.time:
        qc.self.axhitme = 0
        return 
        
    qc.self.pain_finished = qc.time + 0.5
    #  don't make multiple pain sounds right after each other
    #  ax pain sound
    if qc.self.axhitme == 1:
        qc.self.axhitme = 0
        qc.self.sound(defs.CHAN_VOICE, 'player/axhit1.wav', 1, defs.ATTN_NORM)
        return 
        
    rs = round((random.random() * 5) + 1)
    qc.self.noise = None
    if rs == 1:
        qc.self.noise = 'player/pain1.wav'
    elif rs == 2:
        qc.self.noise = 'player/pain2.wav'
    elif rs == 3:
        qc.self.noise = 'player/pain3.wav'
    elif rs == 4:
        qc.self.noise = 'player/pain4.wav'
    elif rs == 5:
        qc.self.noise = 'player/pain5.wav'
    else:
        qc.self.noise = 'player/pain6.wav'
    qc.self.sound(defs.CHAN_VOICE, qc.self.noise, 1, defs.ATTN_NORM)
    return 
    

def player_pain1(*qwp_extra):
    qc.self.frame = frame['pain1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_pain2
    PainSound()
    qc.self.weaponframe = 0

def player_pain2(*qwp_extra):
    qc.self.frame = frame['pain2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_pain3

def player_pain3(*qwp_extra):
    qc.self.frame = frame['pain3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_pain4

def player_pain4(*qwp_extra):
    qc.self.frame = frame['pain4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_pain5

def player_pain5(*qwp_extra):
    qc.self.frame = frame['pain5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_pain6

def player_pain6(*qwp_extra):
    qc.self.frame = frame['pain6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run

def player_axpain1(*qwp_extra):
    qc.self.frame = frame['axpain1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axpain2
    PainSound()
    qc.self.weaponframe = 0

def player_axpain2(*qwp_extra):
    qc.self.frame = frame['axpain2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axpain3

def player_axpain3(*qwp_extra):
    qc.self.frame = frame['axpain3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axpain4

def player_axpain4(*qwp_extra):
    qc.self.frame = frame['axpain4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axpain5

def player_axpain5(*qwp_extra):
    qc.self.frame = frame['axpain5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_axpain6

def player_axpain6(*qwp_extra):
    qc.self.frame = frame['axpain6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_run

def player_pain(*qwp_extra):
    if qc.self.weaponframe:
        return 
    if qc.self.invisible_finished > qc.time:
        return  #  eyes don't have pain frames
    if qc.self.weapon == defs.IT_AXE:
        player_axpain1()
    else:
        player_pain1()
    

def DeathBubblesSpawn(*qwp_extra):
    bubble = engine.world
    if qc.self.owner.waterlevel != 3:
        return 
    bubble = qc.spawn()
    bubble.setmodel('progs/s_bubble.spr')
    qc.setorigin(bubble, qc.self.owner.origin + Vector(0, 0, 24))
    bubble.movetype = defs.MOVETYPE_NOCLIP
    bubble.solid = defs.SOLID_NOT
    bubble.velocity = Vector(0, 0, 15)
    bubble.nextthink = qc.time + 0.5
    bubble.think = misc.bubble_bob
    bubble.classname = 'bubble'
    bubble.frame = 0
    bubble.cnt = 0
    qc.setsize(bubble, Vector(-8, -8, -8), Vector(8, 8, 8))
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = DeathBubblesSpawn
    qc.self.air_finished += 1
    if qc.self.air_finished >= qc.self.bubble_count:
        qc.self.remove()
    

def DeathBubbles(num_bubbles, *qwp_extra):
    bubble_spawner = engine.world
    bubble_spawner = qc.spawn()
    qc.setorigin(bubble_spawner, qc.self.origin)
    bubble_spawner.movetype = defs.MOVETYPE_NONE
    bubble_spawner.solid = defs.SOLID_NOT
    bubble_spawner.nextthink = qc.time + 0.1
    bubble_spawner.think = DeathBubblesSpawn
    bubble_spawner.air_finished = 0
    bubble_spawner.owner = qc.self
    bubble_spawner.bubble_count = num_bubbles
    return 
    

def DeathSound(*qwp_extra):
    rs = 0
    #  water death sounds
    if qc.self.waterlevel == 3:
        DeathBubbles(5)
        qc.self.sound(defs.CHAN_VOICE, 'player/h2odeath.wav', 1, defs.ATTN_NONE)
        return 
        
    rs = round((random.random() * 4) + 1)
    if rs == 1:
        qc.self.noise = 'player/death1.wav'
    if rs == 2:
        qc.self.noise = 'player/death2.wav'
    if rs == 3:
        qc.self.noise = 'player/death3.wav'
    if rs == 4:
        qc.self.noise = 'player/death4.wav'
    if rs == 5:
        qc.self.noise = 'player/death5.wav'
    qc.self.sound(defs.CHAN_VOICE, qc.self.noise, 1, defs.ATTN_NONE)
    return 
    

def PlayerDead(*qwp_extra):
    qc.self.nextthink = -1
    #  allow respawn after a certain time
    qc.self.deadflag = defs.DEAD_DEAD
    

def VelocityForDamage(dm, *qwp_extra):
    v = Vector(0, 0, 0)
    if defs.damage_inflictor.velocity.length() > 0:
        v = 0.5 * defs.damage_inflictor.velocity
        v += 25 * qc.normalize(qc.self.origin - defs.damage_inflictor.origin)
        v %= Vector(None, None, 100 + 240 * random.random())
        v %= Vector(v.x + (200 * weapons.crandom()), None, None)
        v %= Vector(None, v.y + (200 * weapons.crandom()), None)
        # dprint ("Velocity gib\n");                
        
    else:
        v %= Vector(100 * weapons.crandom(), None, None)
        v %= Vector(None, 100 * weapons.crandom(), None)
        v %= Vector(None, None, 200 + 100 * random.random())
        
    # v_x = 100 * crandom();
    # v_y = 100 * crandom();
    # v_z = 200 + 100 * random();
    if dm > -50:
        #       dprint ("level 1\n");
        v *= 0.7
        
    elif dm > -200:
        #       dprint ("level 3\n");
        v *= 2
        
    else:
        v *= 10
    return v
    

def ThrowGib(gibname, dm, *qwp_extra):
    new = engine.world
    new = qc.spawn()
    new.origin = qc.self.origin
    new.setmodel(gibname)
    qc.setsize(new, Vector(0, 0, 0), Vector(0, 0, 0))
    new.velocity = VelocityForDamage(dm)
    new.movetype = defs.MOVETYPE_BOUNCE
    new.solid = defs.SOLID_NOT
    new.avelocity %= Vector(random.random() * 600, None, None)
    new.avelocity %= Vector(None, random.random() * 600, None)
    new.avelocity %= Vector(None, None, random.random() * 600)
    new.think = subs.SUB_Remove
    new.ltime = qc.time
    new.nextthink = qc.time + 10 + random.random() * 10
    new.frame = 0
    new.flags = 0
    

def ThrowHead(gibname, dm, *qwp_extra):
    qc.self.setmodel(gibname)
    qc.self.frame = 0
    qc.self.nextthink = -1
    qc.self.movetype = defs.MOVETYPE_BOUNCE
    qc.self.takedamage = defs.DAMAGE_NO
    qc.self.solid = defs.SOLID_NOT
    qc.self.view_ofs = Vector(0, 0, 8)
    qc.setsize(qc.self, Vector(-16, -16, 0), Vector(16, 16, 56))
    qc.self.velocity = VelocityForDamage(dm)
    qc.self.origin %= Vector(None, None, qc.self.origin.z - 24)
    qc.self.flags -= qc.self.flags & defs.FL_ONGROUND
    qc.self.avelocity = weapons.crandom() * Vector(0, 600, 0)
    

def GibPlayer(*qwp_extra):
    ThrowHead('progs/h_player.mdl', qc.self.health)
    ThrowGib('progs/gib1.mdl', qc.self.health)
    ThrowGib('progs/gib2.mdl', qc.self.health)
    ThrowGib('progs/gib3.mdl', qc.self.health)
    qc.self.deadflag = defs.DEAD_DEAD
    if defs.damage_attacker.classname == 'teledeath':
        qc.self.sound(defs.CHAN_VOICE, 'player/teledth1.wav', 1, defs.ATTN_NONE)
        return 
        
    if defs.damage_attacker.classname == 'teledeath2':
        qc.self.sound(defs.CHAN_VOICE, 'player/teledth1.wav', 1, defs.ATTN_NONE)
        return 
        
    if random.random() < 0.5:
        qc.self.sound(defs.CHAN_VOICE, 'player/gib.wav', 1, defs.ATTN_NONE)
    else:
        qc.self.sound(defs.CHAN_VOICE, 'player/udeath.wav', 1, defs.ATTN_NONE)
    

def PlayerDie(*qwp_extra):
    i = 0
    s = None
    qc.self.items -= qc.self.items & defs.IT_INVISIBILITY
    if (qc.stof(qc.world.infokey('dq'))) != 0:
        if qc.self.super_damage_finished > 0:
            items.DropQuad(qc.self.super_damage_finished - qc.time)
            engine.bprint(defs.PRINT_LOW, qc.self.netname)
            if defs.deathmatch == 4:
                engine.bprint(defs.PRINT_LOW, ' lost an OctaPower with ')
            else:
                engine.bprint(defs.PRINT_LOW, ' lost a quad with ')
            s = str(round(qc.self.super_damage_finished - qc.time))
            engine.bprint(defs.PRINT_LOW, s)
            engine.bprint(defs.PRINT_LOW, ' seconds remaining\012')
            
        
    if (qc.stof(qc.world.infokey('dr'))) != 0:
        if qc.self.invisible_finished > 0:
            engine.bprint(defs.PRINT_LOW, qc.self.netname)
            engine.bprint(defs.PRINT_LOW, ' lost a ring with ')
            s = str(round(qc.self.invisible_finished - qc.time))
            engine.bprint(defs.PRINT_LOW, s)
            engine.bprint(defs.PRINT_LOW, ' seconds remaining\012')
            items.DropRing(qc.self.invisible_finished - qc.time)
            
        
    qc.self.invisible_finished = 0 #  don't die as eyes
    qc.self.invincible_finished = 0
    qc.self.super_damage_finished = 0
    qc.self.radsuit_finished = 0
    qc.self.modelindex = client.modelindex_player #  don't use eyes
    items.DropBackpack()
    qc.self.weaponmodel = None
    qc.self.view_ofs = Vector(0, 0, -8)
    qc.self.deadflag = defs.DEAD_DYING
    qc.self.solid = defs.SOLID_NOT
    qc.self.flags -= qc.self.flags & defs.FL_ONGROUND
    qc.self.movetype = defs.MOVETYPE_TOSS
    if qc.self.velocity.z < 10:
        qc.self.velocity %= Vector(None, None, qc.self.velocity.z + random.random() * 300)
    if qc.self.health < -40:
        GibPlayer()
        return 
        
    DeathSound()
    qc.self.angles %= Vector(0, None, None)
    qc.self.angles %= Vector(None, None, 0)
    if qc.self.weapon == defs.IT_AXE:
        player_die_ax1()
        return 
        
    i = engine.cvar('temp1')
    if not i:
        i = 1 + math.floor(random.random() * 6)
    if i == 1:
        player_diea1()
    elif i == 2:
        player_dieb1()
    elif i == 3:
        player_diec1()
    elif i == 4:
        player_died1()
    else:
        player_diee1()
    

def set_suicide_frame(*qwp_extra):
    #  used by klill command and diconnect command
    if qc.self.model != 'progs/player.mdl':
        return  #  allready gibbed
    qc.self.frame = frame['deatha11']
    qc.self.solid = defs.SOLID_NOT
    qc.self.movetype = defs.MOVETYPE_TOSS
    qc.self.deadflag = defs.DEAD_DEAD
    qc.self.nextthink = -1
    

def player_diea1(*qwp_extra):
    qc.self.frame = frame['deatha1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea2

def player_diea2(*qwp_extra):
    qc.self.frame = frame['deatha2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea3

def player_diea3(*qwp_extra):
    qc.self.frame = frame['deatha3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea4

def player_diea4(*qwp_extra):
    qc.self.frame = frame['deatha4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea5

def player_diea5(*qwp_extra):
    qc.self.frame = frame['deatha5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea6

def player_diea6(*qwp_extra):
    qc.self.frame = frame['deatha6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea7

def player_diea7(*qwp_extra):
    qc.self.frame = frame['deatha7']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea8

def player_diea8(*qwp_extra):
    qc.self.frame = frame['deatha8']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea9

def player_diea9(*qwp_extra):
    qc.self.frame = frame['deatha9']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea10

def player_diea10(*qwp_extra):
    qc.self.frame = frame['deatha10']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea11

def player_diea11(*qwp_extra):
    qc.self.frame = frame['deatha11']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diea11
    PlayerDead()

def player_dieb1(*qwp_extra):
    qc.self.frame = frame['deathb1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb2

def player_dieb2(*qwp_extra):
    qc.self.frame = frame['deathb2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb3

def player_dieb3(*qwp_extra):
    qc.self.frame = frame['deathb3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb4

def player_dieb4(*qwp_extra):
    qc.self.frame = frame['deathb4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb5

def player_dieb5(*qwp_extra):
    qc.self.frame = frame['deathb5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb6

def player_dieb6(*qwp_extra):
    qc.self.frame = frame['deathb6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb7

def player_dieb7(*qwp_extra):
    qc.self.frame = frame['deathb7']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb8

def player_dieb8(*qwp_extra):
    qc.self.frame = frame['deathb8']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb9

def player_dieb9(*qwp_extra):
    qc.self.frame = frame['deathb9']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_dieb9
    PlayerDead()

def player_diec1(*qwp_extra):
    qc.self.frame = frame['deathc1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec2

def player_diec2(*qwp_extra):
    qc.self.frame = frame['deathc2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec3

def player_diec3(*qwp_extra):
    qc.self.frame = frame['deathc3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec4

def player_diec4(*qwp_extra):
    qc.self.frame = frame['deathc4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec5

def player_diec5(*qwp_extra):
    qc.self.frame = frame['deathc5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec6

def player_diec6(*qwp_extra):
    qc.self.frame = frame['deathc6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec7

def player_diec7(*qwp_extra):
    qc.self.frame = frame['deathc7']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec8

def player_diec8(*qwp_extra):
    qc.self.frame = frame['deathc8']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec9

def player_diec9(*qwp_extra):
    qc.self.frame = frame['deathc9']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec10

def player_diec10(*qwp_extra):
    qc.self.frame = frame['deathc10']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec11

def player_diec11(*qwp_extra):
    qc.self.frame = frame['deathc11']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec12

def player_diec12(*qwp_extra):
    qc.self.frame = frame['deathc12']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec13

def player_diec13(*qwp_extra):
    qc.self.frame = frame['deathc13']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec14

def player_diec14(*qwp_extra):
    qc.self.frame = frame['deathc14']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec15

def player_diec15(*qwp_extra):
    qc.self.frame = frame['deathc15']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diec15
    PlayerDead()

def player_died1(*qwp_extra):
    qc.self.frame = frame['deathd1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died2

def player_died2(*qwp_extra):
    qc.self.frame = frame['deathd2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died3

def player_died3(*qwp_extra):
    qc.self.frame = frame['deathd3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died4

def player_died4(*qwp_extra):
    qc.self.frame = frame['deathd4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died5

def player_died5(*qwp_extra):
    qc.self.frame = frame['deathd5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died6

def player_died6(*qwp_extra):
    qc.self.frame = frame['deathd6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died7

def player_died7(*qwp_extra):
    qc.self.frame = frame['deathd7']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died8

def player_died8(*qwp_extra):
    qc.self.frame = frame['deathd8']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died9

def player_died9(*qwp_extra):
    qc.self.frame = frame['deathd9']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_died9
    PlayerDead()

def player_diee1(*qwp_extra):
    qc.self.frame = frame['deathe1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee2

def player_diee2(*qwp_extra):
    qc.self.frame = frame['deathe2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee3

def player_diee3(*qwp_extra):
    qc.self.frame = frame['deathe3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee4

def player_diee4(*qwp_extra):
    qc.self.frame = frame['deathe4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee5

def player_diee5(*qwp_extra):
    qc.self.frame = frame['deathe5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee6

def player_diee6(*qwp_extra):
    qc.self.frame = frame['deathe6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee7

def player_diee7(*qwp_extra):
    qc.self.frame = frame['deathe7']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee8

def player_diee8(*qwp_extra):
    qc.self.frame = frame['deathe8']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee9

def player_diee9(*qwp_extra):
    qc.self.frame = frame['deathe9']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_diee9
    PlayerDead()

def player_die_ax1(*qwp_extra):
    qc.self.frame = frame['axdeth1']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax2

def player_die_ax2(*qwp_extra):
    qc.self.frame = frame['axdeth2']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax3

def player_die_ax3(*qwp_extra):
    qc.self.frame = frame['axdeth3']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax4

def player_die_ax4(*qwp_extra):
    qc.self.frame = frame['axdeth4']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax5

def player_die_ax5(*qwp_extra):
    qc.self.frame = frame['axdeth5']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax6

def player_die_ax6(*qwp_extra):
    qc.self.frame = frame['axdeth6']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax7

def player_die_ax7(*qwp_extra):
    qc.self.frame = frame['axdeth7']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax8

def player_die_ax8(*qwp_extra):
    qc.self.frame = frame['axdeth8']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax9

def player_die_ax9(*qwp_extra):
    qc.self.frame = frame['axdeth9']
    qc.self.nextthink = qc.time + 0.1
    qc.self.think = player_die_ax9
    PlayerDead()
